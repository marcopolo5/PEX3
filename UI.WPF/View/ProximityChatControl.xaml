<UserControl x:Class="UI.WPF.View.ProximityChatControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UI.WPF.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="#505050"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="Black" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="8"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#505050"/>
            <Setter Property="BorderBrush" Value="#505050"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="10"/>

                            <Track IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ChangeColor" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True" >
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Background" Value="#FF838383" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Background" Value="#112152" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <!--<Border Grid.Column="1" CornerRadius="45" BorderThickness="2" BorderBrush="white" Background="#112152">-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="370" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>
            <!--<Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Background="Transparent" Height="auto" Margin="10,0,0,0">
                <Border Background="#F8F6F7" Height="40"  Width="300" CornerRadius="25" HorizontalAlignment="Left">
                    <Grid Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Grid.Row="0" Source="/Assets/search.png" HorizontalAlignment="Center" Margin="10,5,0,11" Width="auto"/>
                        <TextBox Grid.Column="1" x:Name="searchBox" FontSize="20" HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch" VerticalContentAlignment="Center" TextAlignment="Left"
                                             BorderThickness="0" Background="Transparent" Margin="0,0,10,10" Foreground="LightGray">
                        </TextBox>
                    </Grid>
                </Border>
            </Border>

            <Button x:Name="addConversation" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Background="#FF838383" HorizontalAlignment="Right" Width="40" Height="40" Margin="10,20,10,20" Click="addConversation_Click" Style="{DynamicResource ButtonStyle1}" >
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="60"/>
                    </Style>
                </Button.Resources>
                <Button.Content>
                    <TextBlock Text="add"  />
                </Button.Content>
            </Button>
            -->
        <Button x:Name="AddConversation" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Background="#FF838383" HorizontalAlignment="Left" Width="200" Height="40" Margin="10,20,10,20" Click="AddNewProximityConversation_Click" Style="{DynamicResource ButtonStyle1}" >
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Button.Resources>
            <Button.Content>
                <TextBlock Text="Create New Proximity Chat"  />
            </Button.Content>
        </Button>
        <Button x:Name="Refresh" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Background="#FF838383" HorizontalAlignment="Right" Width="120" Height="40" Margin="10,20,10,20" Click="Refresh_Click" Style="{DynamicResource ButtonStyle1}" >
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Button.Resources>
            <Button.Content>
                <TextBlock Text="Refresh"  />
            </Button.Content>
        </Button>

        <ScrollViewer Grid.Row="2" Grid.RowSpan="2">
                <!--conversation list view Style="{DynamicResource ChangeColor}"-->
                <ListView x:Name="ProximityConversationList" 
                              Background="Transparent" 
                              BorderThickness="0" 
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden" SelectionChanged="ConversationList_SelectionChanged" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="290"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Border Width="50" Height="50" CornerRadius="60" HorizontalAlignment="Center">
                                    <Border.Background>
                                        <!--<ImageBrush ImageSource="/Assets/profile.png"/>-->
                                    <ImageBrush ImageSource="{Binding AccountProfilePicture}"/>
                                </Border.Background>
                                </Border>

                                <Border Width="Auto" 
                                                Height="10" 
                                                VerticalAlignment="Bottom" 
                                                Margin="5" 
                                                HorizontalAlignment="Right" 
                                                CornerRadius="15" 
                                                Background="White"/>
                                <!--Foreground="#fae12c"-->
                                <!--Foreground="#FF838383"-->
                                <StackPanel Grid.Column="1">
                                    <TextBlock Text="{Binding ConversationName}" 
                                                       Margin="10 0"
                                                       Foreground="{ Binding NameColour}"
                                                       FontSize="17"
                                                       FontWeight="DemiBold"/>
                                    <TextBlock Text="{Binding LastMessage}" 
                                                       Margin="10,5,0,0" 
                                                       Foreground="{ Binding MessageColour }"
                                                       TextTrimming="CharacterEllipsis" 
                                                       Opacity="0.8"
                                                       FontWeight="DemiBold"
                                                       FontSize="12"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>

            <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="60" Height="60" CornerRadius="60" HorizontalAlignment="Left" Margin="40,0,0,0">
                <Border.Background>
                    <ImageBrush x:Name="ProfilePicture" ImageSource="/Assets/profile.png"/>
                </Border.Background>
            </Border>
            <!--conversation title-->
            <TextBlock x:Name="ConversationTitle" 
                           Grid.Column="1" Grid.Row="0" 
                           Text="Open a conversation" Margin="120,10,0,0" 
                           FontSize="20" Foreground="#fae12c" FontWeight="Bold" />
            <!--conversation status-->
            <TextBlock x:Name="ConversationStatus" 
                           Grid.Column="1" Grid.Row="1" 
                           Text="Click on a conversation to start chatting" 
                           Margin="120,5,0,0"
                           FontSize="18" Foreground="#fae12c"  />

            <Border Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" Background="Transparent" Height="auto" Margin="20,0,20,0">
                <Border Background="LightGray" Height="50" CornerRadius="25" HorizontalAlignment="Stretch">
                    <TextBox x:Name="MessageText" Grid.Column="1" Grid.ColumnSpan="1" FontSize="25" HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch" VerticalContentAlignment="Center" TextAlignment="Left"
                                             BorderThickness="0" Background="Transparent" Margin="10,0,100,0">
                    </TextBox>
                </Border>
            </Border>

            <Button x:Name="SendMessageBtn"
                        Grid.Column="2" 
                        Grid.Row="4" 
                        Margin="20,17,20,17" 
                        Background="#112152" 
                        HorizontalAlignment="Center" 
                        Width="50" 
                        Click="SendMessage_Click" 
                        Style="{DynamicResource ButtonStyle1}"
                        IsEnabled="False">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="60"/>
                    </Style>
                </Button.Resources>
                <Button.Content>
                    <TextBlock Text="send" Foreground="White"/>
                </Button.Content>
            </Button>

            <ScrollViewer  x:Name="ChatScrollViewer" 
                    VerticalScrollBarVisibility="Visible" AllowDrop="False"
                    Grid.Column="1" Grid.Row="2"  Grid.ColumnSpan="2">
                <StackPanel Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="10,0,0,5" Background="#112152">
                    <!--chat conversation-->
                    <!--
                    <ListView x:Name="ChatProximityConversation" 
                                  Background="Transparent" 
                                  BorderThickness="0" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                  VerticalAlignment="Bottom" 
                                  Margin="10,0,30,0" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="560"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Padding="5" Background="#112152" >
                                        <Grid Background="#112152" >
                                            <Border CornerRadius="20" Background="#FF838383" Padding="10" Margin="20,0,50,0" HorizontalAlignment="{Binding Alignment}">
                                                <TextBlock  VerticalAlignment="Center" 
                                                                Background="#FF838383" 
                                                                TextWrapping="Wrap" 
                                                                Text="{Binding TextMessage}" 
                                                                FontSize="15" 
                                                                Foreground="white" 
                                                                FontFamily="Comic Sans MS"/>
                                            </Border>
                                            <Polygon Points="{Binding Positioning}" 
                                                         Fill="#FF838383"
                                                         Margin="{Binding Margins}"
                                                         HorizontalAlignment="{Binding Alignment}"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    -->

                <ListView x:Name="ChatProximityConversation" 
                                  Background="Red" 
                                  BorderThickness="0" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                  VerticalAlignment="Bottom" 
                                  Margin="10,0,30,0" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="560"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Border Padding="5" Background="#112152" >
                                    <Grid Background="#112152" >
                                        <Border CornerRadius="20" Background="#FF838383" Padding="10" Margin="20,0,50,0" HorizontalAlignment="{Binding Alignment}">
                                            <StackPanel Orientation="Horizontal" x:Name="MessageStackPanel">
                                                <TextBlock  VerticalAlignment="Center" 
                                                                Background="#FF838383" 
                                                                TextWrapping="Wrap" 
                                                                Text="{Binding TextMessage}" 
                                                                FontSize="15" 
                                                                Foreground="white" 
                                                                FontFamily="Comic Sans MS"
                                                                />
                                                <ToggleButton x:Name="OpenFriendMenuPopUp"
                                                              Margin="10 0 0 0"
                                                            Style="{StaticResource OpenMenuButton}"
                                                            />
                                                <Popup IsOpen="{Binding IsChecked, ElementName=OpenFriendMenuPopUp}" 
                                                            PlacementTarget="{Binding ElementName=OpenFriendMenuPopUp}"
                                                            AllowsTransparency="True" 
                                                            PopupAnimation="Slide"  
                                                            StaysOpen="False"                                                             
                                                            VerticalOffset="10"
                                                            HorizontalOffset="-13"
                                                            >
                                                    <Border x:Name="BG" 
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Cursor="Hand"
                                                            Width="50"
                                                            Height="100"
                                                            Background="Transparent"
                                                            BorderThickness="0.2"
                                                            BorderBrush="Beige"
                                                            CornerRadius="8">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="50"/>
                                                                <RowDefinition Height="50"/>
                                                            </Grid.RowDefinitions>

                                                            <Button x:Name="RateUpButton"
                                                                Grid.Row="0"
                                                                Style="{StaticResource RateUpButton}"
                                                                />

                                                            <Button x:Name="RateDown"
                                                                Grid.Row="1"
                                                                Style="{StaticResource RateDownButton}"
                                                                />
                                                        </Grid>

                                                        <Border.Effect>
                                                            <DropShadowEffect Direction="0"
                                                              ShadowDepth="-10"
                                                              BlurRadius="12" 
                                                              Opacity="0.6"
                                                              Color="{StaticResource C_YellowTheme}"
                                                                          />
                                                        </Border.Effect>
                                                    </Border>

                                                </Popup>
                                            </StackPanel>

                                        </Border>
                                        <Polygon Points="{Binding Positioning}" 
                                                         Fill="#FF838383"
                                                         Margin="{Binding Margins}"
                                                         HorizontalAlignment="{Binding Alignment}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>



            </StackPanel>
            </ScrollViewer>
        </Grid>
    <!--</Border>-->
</UserControl>
