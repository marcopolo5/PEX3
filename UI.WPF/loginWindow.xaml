<Window x:Class="UI.WPF.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UI.WPF"
        mc:Ignorable="d"
        Title="loginWindow" Height="800" Width="1200" Background="Transparent" WindowStyle = "None" AllowsTransparency="True" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#112152"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#112152"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>

    </Window.Resources>
    <Border CornerRadius="52" BorderThickness="10" BorderBrush="white" >
        <Border CornerRadius="35" BorderThickness="14" BorderBrush="#112152">
            <Grid Background="#112152">

                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="1" Grid.Column="1" FontFamily="Comic Sans MS" FontSize="60" Content="Login" Foreground="White" Margin="70,20,40,10" FontWeight="Bold" Grid.ColumnSpan="4" HorizontalAlignment="Center"/>
                <Label Grid.Row="2" Grid.Column="2" FontFamily="Comic Sans MS" FontSize="30" Content="Email" Foreground="White" Margin="50,40,470,0" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                <Label Grid.Row="4" Grid.Column="2" FontFamily="Comic Sans MS" FontSize="30" Content="Password" Foreground="White" Margin="50,10,470,0" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                <Image Grid.Column="1" Grid.Row="1" Width="190" Margin="30,0,50,50" Source="/Assets/logo.png" HorizontalAlignment="Left" Grid.RowSpan="2"/>

                <TextBox Name="loginEmail" Grid.Row="3" Grid.Column="2" Margin="50,0,0,10" Height="40" Width="600" FontSize="25" FontFamily="Comic Sans MS" Grid.ColumnSpan="2" HorizontalAlignment="Left" >
                    <TextBox.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="15"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="white" Offset="0.0" />
                                        <GradientStop Color="#FF838383" Offset="1.00" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <PasswordBox Name="loginPassword" Grid.Row="5" Grid.Column="2" Margin="50,0,0,10" Height="40" Width="600" FontSize="25" Grid.ColumnSpan="2" HorizontalAlignment="Left">
                    <PasswordBox.Style>
                        <Style TargetType="PasswordBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Control}">
                                        <Border Name="Border" BorderThickness="1" CornerRadius="15">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="white" Offset="0.0" />
                                                    <GradientStop Color="#FF838383" Offset="1.00" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <ScrollViewer x:Name="PART_ContentHost" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>
                
                <!-- error message on login (do your magic by styling it) -->
                <Label Name="loginErrorMessage" Grid.Row="6" Grid.Column="2"  Grid.ColumnSpan="3" Foreground="Red"></Label>
                <CheckBox x:Name ="rememberMeCheckBox" IsChecked="True" Grid.Row="6" Grid.Column="2" Margin="50,10" >
                    <TextBlock Foreground="White" FontSize="25" FontFamily="Comic Sans MS"> Remember me </TextBlock>
                </CheckBox>
                <Button x:Name="loginButton" Content="Login" Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="7" Width="300" Height="60" Margin="0,0,0,0" FontSize="30" FontFamily="Comic Sans MS" HorizontalAlignment="Center" Foreground="#333333" Click="ButtonLoginClick">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="60"/>
                        </Style>
                    </Button.Resources>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="white" Offset="0.0" />
                                        <GradientStop Color="#FF838383" Offset="1.00" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Image Grid.Column="2" Grid.ColumnSpan="4" Grid.Row="7" Width ="60" Height="60" Source="/Assets/google-logo.png" Stretch="Fill" Margin="140,37,0,0">
                    <Image.ToolTip>
                        <ToolTip>
                            <Image Source="/Assets/btn_google_signin_light.png"/>
                        </ToolTip>
                        
                    </Image.ToolTip>
                </Image>

                <!--<StackPanel Grid.Column="2" Grid.Row="7" Grid.ColumnSpan="2" Margin="0,20,30,0">
                    <Image  Width ="50" Height="50" Source="/Assets/google-logo.png" Stretch="Fill" Margin="150,10,0,0"/>
                    <TextBlock x:Name ="signinGoogle" FontSize="25" Foreground="white" Text="Sign in with Google"  FontFamily="Comic Sans MS" Margin="520,-40,20,40"/>
                </StackPanel>-->
               


                <TextBlock x:Name ="goToRegisterButton" PreviewMouseDown ="goToRegisterButton_PreviewMouseDown" Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="2" FontSize="25" Foreground="white" Text="I don't have an account" FontFamily="Comic Sans MS"  Margin="180,40,0,0" HorizontalAlignment="Center"/>
                
                
                
                <Button x:Name ="closeButton" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="3" BorderThickness="0" BorderBrush="Transparent" Width="50" Height="50" Margin="800,-10,0,100" Click="closeButton_Click" Style="{DynamicResource ButtonStyle1}" >
                    <Button.Background>
                        <ImageBrush ImageSource="Assets/close.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>

                
            </Grid>
        </Border>
    </Border>
</Window>
